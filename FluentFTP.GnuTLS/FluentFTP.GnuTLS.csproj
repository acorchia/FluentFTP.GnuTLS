<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<PackageId>FluentFTP.GnuTLS</PackageId>
		<Title>FluentFTP.GnuTLS</Title>
		<Description>Adds support for TLS1.3 streams into FluentFTP using a .NET wrapper of GnuTLS.</Description>
		<Authors>Michael Stiemke, Robin Rodricks, FluentFTP Contributors</Authors>
		<PackageProjectUrl>https://github.com/robinrodricks/FluentFTP</PackageProjectUrl>
		<Copyright>Copyright (c) 2015 Robin Rodricks and FluentFTP Contributors</Copyright>
		<PackageTags>FluentFTP, ftp, tls13, gnutls</PackageTags>
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\FluentFTP.GnuTLS.xml</DocumentationFile>
		<SignAssembly>True</SignAssembly>
		<AssemblyOriginatorKeyFile>sn.snk</AssemblyOriginatorKeyFile>
		<Version>1.0.9</Version>
		<PackageLicenseExpression>LGPL-2.1-only</PackageLicenseExpression>
		<PackageIcon>logo-nuget.png</PackageIcon>
		<LangVersion>10.0</LangVersion>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	</PropertyGroup>

    <PropertyGroup>

	<TargetFrameworks>net60;net50;net472;net462;netstandard2.0;netstandard2.1</TargetFrameworks>
        <LangVersion>10.0</LangVersion>
        <RepositoryUrl>https://github.com/robinrodricks/FluentFTP</RepositoryUrl>
        <RepositoryType>git</RepositoryType>

	<ContentTargetFolders>contentFiles</ContentTargetFolders>
	<!--
	    default: content;contentFiles
	    Projects using packages.config use the "contents" directory
		These will be copied to the wrong place on build, so doesn't help for .dll files
		and anyway it also refuses to reference foreign dll files correctly.
	    Projects using PackageReference use the "contentFiles" directory.
		These will be then copied to the folder location of the exe file on build.
	-->

    </PropertyGroup>

    <!--
	Build output folder:
        This copies the .dll files to the respective targetframework folders into
	the root location where the main executable resides.
    -->
    <ItemGroup>
        <ContentWithTargetPath Include="Libs\Win64\**">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>%(Filename)%(Extension)</TargetPath>
        </ContentWithTargetPath>
    </ItemGroup>

    <!--
	Nuget folder:
	This copies the .dll files to the package "contentFiles" folders
	(see comment for ContentTargetFolders above).
    -->
    <ItemGroup>
	<Content Include="Libs\Win64\**">
	</Content>
    </ItemGroup>

    <!--
	Nuget folder:
        This copies the .dll files to the package "content" folder for packages.config projects,
	but without the path. This allows the FluentFTP.GnuTLS.targets file to remain constant
	(see comment for ContentTargetFolders above).
    -->
    <ItemGroup>
        <None Include="Libs\Win64\**">
            <Pack>True</Pack>
            <PackagePath>\content\%(Filename)%(Extension)</PackagePath>
        </None>
    </ItemGroup>

    <!--
	Nuget folder:
	This magic causes MSBUILD on the install machine to copy in the .dlls on a build.
	We are moving a .target file (which contains the copy command) to the nuget package
	build folder. The copy command will move the .dll files to the build output folder.
    -->
    <ItemGroup>
        <Content Include="Libs\Helpers\FluentFTP.GnuTLS.targets">
            <Pack>True</Pack>
           <PackagePath>build/FluentFTP.GnuTLS.targets</PackagePath>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <!--
            Nuget folder:
            Logo file -> package
        -->
        <None Include="..\.github\logo-nuget.png">
            <Pack>True</Pack>
            <PackagePath>\</PackagePath>
        </None>
        <!--
            Nuget folder:
            License file -> package
        -->
	<None Include="..\LICENSE">
            <Pack>True</Pack>
            <PackagePath>\</PackagePath>
        </None>
    </ItemGroup>
    
    <ItemGroup>
      <PackageReference Include="FluentFTP" Version="46.0.2" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    </PropertyGroup>

</Project>
